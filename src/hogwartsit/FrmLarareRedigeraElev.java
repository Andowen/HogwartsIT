/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hogwartsit;

import java.util.HashMap;
import javax.swing.JOptionPane;
import oru.inf.InfDB;
import oru.inf.InfException;

/**
 *
 * @author andow
 */
public class FrmLarareRedigeraElev extends javax.swing.JInternalFrame {

    private static InfDB idb;
    //Fält för att spara elevID för den aktuella eleven
    private String elevID = "";
    
    /**
     * Creates new form FrmLarareRedigeraElev
     */
    public FrmLarareRedigeraElev(InfDB idb) {
        initComponents();
        this.idb = idb;
        //Döljer panelen för ändringar
        pnlAndraElev.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblSokElev = new javax.swing.JLabel();
        tfNamnFalt = new javax.swing.JTextField();
        btnSok = new javax.swing.JButton();
        pnlAndraElev = new javax.swing.JPanel();
        tfFornamn = new javax.swing.JTextField();
        tfEfternamn = new javax.swing.JTextField();
        tfSovsal = new javax.swing.JTextField();
        lblFornamn = new javax.swing.JLabel();
        lblEfternamn = new javax.swing.JLabel();
        lblSovsal = new javax.swing.JLabel();
        lblGorAndringar = new javax.swing.JLabel();
        btnAvbryt = new javax.swing.JButton();
        btnSparaAndring = new javax.swing.JButton();

        lblSokElev.setText("Sök elev att redigera:");

        btnSok.setText("Sök");
        btnSok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSokActionPerformed(evt);
            }
        });

        pnlAndraElev.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        tfEfternamn.setColumns(5);

        lblFornamn.setText("Förnamn:");

        lblEfternamn.setText("Efternamn:");

        lblSovsal.setText("Sovsal:");

        lblGorAndringar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lblGorAndringar.setText("Gör ändringar direkt i fälten nedan.");

        btnAvbryt.setText("Avbryt");
        btnAvbryt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAvbrytActionPerformed(evt);
            }
        });

        btnSparaAndring.setText("Spara ändringar");
        btnSparaAndring.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSparaAndringActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlAndraElevLayout = new javax.swing.GroupLayout(pnlAndraElev);
        pnlAndraElev.setLayout(pnlAndraElevLayout);
        pnlAndraElevLayout.setHorizontalGroup(
            pnlAndraElevLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAndraElevLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlAndraElevLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlAndraElevLayout.createSequentialGroup()
                        .addComponent(btnSparaAndring)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAvbryt))
                    .addGroup(pnlAndraElevLayout.createSequentialGroup()
                        .addGroup(pnlAndraElevLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblGorAndringar)
                            .addGroup(pnlAndraElevLayout.createSequentialGroup()
                                .addGroup(pnlAndraElevLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(pnlAndraElevLayout.createSequentialGroup()
                                        .addComponent(tfFornamn, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlAndraElevLayout.createSequentialGroup()
                                        .addComponent(lblFornamn)
                                        .addGap(90, 90, 90)))
                                .addGroup(pnlAndraElevLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblEfternamn)
                                    .addComponent(tfEfternamn, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlAndraElevLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblSovsal)
                            .addComponent(tfSovsal, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        pnlAndraElevLayout.setVerticalGroup(
            pnlAndraElevLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlAndraElevLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblGorAndringar)
                .addGap(18, 18, 18)
                .addGroup(pnlAndraElevLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblEfternamn)
                    .addComponent(lblFornamn)
                    .addComponent(lblSovsal))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlAndraElevLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfEfternamn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfFornamn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfSovsal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(63, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlAndraElevLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlAndraElevLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAvbryt)
                    .addComponent(btnSparaAndring))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblSokElev)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(tfNamnFalt, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(34, 34, 34)
                                .addComponent(btnSok))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(pnlAndraElev, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(90, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblSokElev)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfNamnFalt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSok))
                .addGap(29, 29, 29)
                .addComponent(pnlAndraElev, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSokActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSokActionPerformed
        //Kontrollerar att namnfältet inte är tomt.
        if (Validering.textfaltHarVarde(tfNamnFalt)) {
            //Delar strängen som användaren skickar in i namnfältet i för- och efternamn.
            String[] elevNamnet = tfNamnFalt.getText().trim().split("\\s+");
            String forNamn = elevNamnet[0];
            String efterNamn = elevNamnet[1];
            try {
                //Hämtar elevID, förnman, efternamn och sovsal från elevtabellen i databsen
                HashMap<String, String> resultat = idb.fetchRow("SELECT elev_id, fornamn, efternamn, sovsal FROM elev WHERE fornamn = \'" + forNamn + "\' AND efternamn = \'" + efterNamn + "\'");
                //Fyller i de hämtade värdena i textrutorna för ändringar
                tfFornamn.setText(resultat.get("FORNAMN"));
                tfEfternamn.setText(resultat.get("EFTERNAMN"));
                tfSovsal.setText(resultat.get("SOVSAL"));
                //Ger fältet elevID ett värde
                elevID = resultat.get("ELEV_ID");
                
                //Kontrollerar att fälten inte är null
                if (tfFornamn != null && tfEfternamn !=null) {
                    //Visar panelen för ändringar, som nu har förifyllda värden med den nuvarande sparade datan.
                    pnlAndraElev.setVisible(true);
                }
                
                else {
                    JOptionPane.showMessageDialog(null, "Det finns inget elev med det namnet!");
                }
            }
            
            catch (InfException ettUndantag) {
                ettUndantag.getMessage();
                JOptionPane.showMessageDialog(null, "Något gick fel!");
            }
        }
    }//GEN-LAST:event_btnSokActionPerformed

    private void btnAvbrytActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAvbrytActionPerformed
        //Avbryter ändringar genom att ett internt metodanrop
        avbrytAndringar();
        
    }//GEN-LAST:event_btnAvbrytActionPerformed

    private void btnSparaAndringActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSparaAndringActionPerformed
        //Kontrollerar att textfälten inte saknar värde, samt att fältet för sovsal innehåller ett heltal
        if (Validering.textfaltHarVarde(tfFornamn) && Validering.textfaltHarVarde(tfEfternamn) && Validering.textfaltTal(tfSovsal)) {
            //Hämtar texten från textfälten, som användaren kan ha redigerat.
            String fornamn = tfFornamn.getText();
            String efternamn = tfEfternamn.getText();
            String sovsal = tfSovsal.getText();
            //Lokal variabel som lagrar texten som ska visas på knapparna i en meddelanderuta
            Object[] knappar = {"Spara", "Avbryt",};
            //En meddelanderuta där användaren får bekräfta som ändringarna ska sparas, som returnerar en int beroende på om användaren klickar "spara" eller "avbryt"
            int arDuSaker = JOptionPane.showOptionDialog(null, "Är du säker?", "Spara ändringar för eleven", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null, knappar, knappar[0]);

            //Kontrollerar att användaren har klickat "spara" i meddelandeutan
            if (arDuSaker == 0) { 
                try {
                    //Uppdaterar raden för den aktuella eleven, med de värden som användaren har skrivit in
                    idb.update("UPDATE Elev \n" + 
                            "SET FORNAMN = \'" + fornamn + "\', EFTERNAMN = \'" + efternamn + "\', SOVSAL = " + sovsal + "\n" +
                            "WHERE ELEV_ID = " + elevID);
                    //Avbryter ändringar för att kräva att ett nytt elevsök sker innan nästa ändring, för att undvika användarfel.
                    avbrytAndringar();
                }
            
                catch (InfException ettUndantag) {
                    ettUndantag.getMessage();
                    JOptionPane.showMessageDialog(null, "Något gick fel!");
                }
            } 
        }
    }//GEN-LAST:event_btnSparaAndringActionPerformed

    private void avbrytAndringar() {
        //Metod som hjälper till att tömma alla textfält, fältet för elevID och döljer ändringspanelen.
        tfNamnFalt.setText("");
        tfFornamn.setText("");
        tfEfternamn.setText("");
        tfSovsal.setText("");
        elevID = "";
        pnlAndraElev.setVisible(false);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAvbryt;
    private javax.swing.JButton btnSok;
    private javax.swing.JButton btnSparaAndring;
    private javax.swing.JLabel lblEfternamn;
    private javax.swing.JLabel lblFornamn;
    private javax.swing.JLabel lblGorAndringar;
    private javax.swing.JLabel lblSokElev;
    private javax.swing.JLabel lblSovsal;
    private javax.swing.JPanel pnlAndraElev;
    private javax.swing.JTextField tfEfternamn;
    private javax.swing.JTextField tfFornamn;
    private javax.swing.JTextField tfNamnFalt;
    private javax.swing.JTextField tfSovsal;
    // End of variables declaration//GEN-END:variables
}
